json-ld of andere inserts:
steeds updatedatum meenemen

sync_params > step > int
RESET 0
INIT 1
FILL 2
SYNC 3

sync_params > fill > assets (bnode)
assets (fill) > last_page > int
assets (fill) > last_cursor > string
assets (fill) > filling > (bnode) > state > bool
assets (fill) > filling > (bnode) > cursor > string
assets (fill) > filling > (bnode) > update_datum > timestamp

sync_params > feed > assets (bnode)
sync_params > feed > assetrelaties (bnode)
sync_params > feed > betrokkenerelaties (bnode)
sync_params > feed > agents (bnode)

assets (feed) > update > (bnode) > page > int
assets (feed) > update > (bnode) > cursor > string
assets (feed) > update > (bnode) > update_datum > timestamp


periodiek checken voor ontbrekende assettypes, relatietypes etc indien mogelijk

# check for ":" in subject, predicate or object
select ?s ?p ?o where {
	GRAPH ?g {
        ?s ?p ?o .
        FILTER ((CONTAINS(str(?o), ':') && !CONTAINS(str(?o), 'https:') && !CONTAINS(str(?o), 'http:') && !DATATYPE(?o) = xsd:dateTime)
            || (CONTAINS(str(?s), ':') && !CONTAINS(str(?s), 'https:') && !CONTAINS(str(?s), 'http:'))
            || (CONTAINS(str(?p), ':') && !CONTAINS(str(?p), 'https:') && !CONTAINS(str(?p), 'http:'))) .
    }
} limit 100


# check for missing assets in assetrelaties
PREFIX imel: <https://wegenenverkeer.data.vlaanderen.be/ns/implementatieelement#>

SELECT ?rel ?assettype ?bron ?doel ?h ?i
WHERE {
    GRAPH ?g {
        ?rel a ?assettype .
        FILTER (CONTAINS(str(?rel), "relatie")) .
        ?rel imel:RelatieObject.bron ?bron .
        ?rel imel:RelatieObject.doel ?doel .
        FILTER(
        	NOT EXISTS {
                GRAPH ?h {?s1 ?p1 ?o1}.
                FILTER(?h = ?bron)
            } ||
            NOT EXISTS {
                GRAPH ?i {?s2 ?p2 ?o2}.
                FILTER(?i = ?doel)
            }
        )
    }
}

LIMIT 5
